{
  "module": {
    "prefix": "module",
    "body": [
      "import { Module } from '@nestjs/common';",
      "",
      "@Module({",
      "\timports: [],",
      "\tcontrollers: [],",
      "\tproviders: [],",
      "\texports: [],",
      "})",
      "export class ModuleName {}"
    ]
  },
  "controller": {
    "prefix": "controller",
    "body": [
      "import {",
      "\tController,",
      "\tUseGuards,",
      "} from '@nestjs/common';",
      "import { ApiBearerAuth, ApiTags } from '@nestjs/swagger';",
      "",
      "// TODO: Add Roles decorator",
      "@ApiBearerAuth()",
      "@ApiTags('Description')",
      "@Controller('Endpoint')",
      "@UseGuards(JwtAuthGuard, RolesGuard)",
      "export class ControllerName {",
      "\tconstructor(",
      "\t\tprivate readonly service: ServiceName,",
      "\t) {}",
      "}"
    ]
  },
  "s-controller": {
    "prefix": "s-controller",
    "body": [
      "import { ApiBearerAuth, ApiTags } from '@nestjs/swagger';",
      "import { Controller, Get, Query, UseGuards } from '@nestjs/common';",
      "",
      "import {",
      "\tAuthV2,",
      "\tERole,",
      "\tJwtAuthGuard,",
      "\tRoles,",
      "\tRolesGuard,",
      "} from '../../../../../auth';",
      "",
      "// TODO: Add Roles decorator",
      "@ApiBearerAuth()",
      "@AuthV2()",
      "@ApiTags('Description')",
      "@Controller('Endpoint')",
      "@UseGuards(JwtAuthGuard, RolesGuard)",
      "export class ControllerName {",
      "\tconstructor(",
      "\t\tprivate readonly service: ServiceName,",
      "\t) {}",
      "}"
    ]
  },
  "service": {
    "prefix": "service",
    "body": [
      "import { Injectable } from '@nestjs/common';",
      "import { InjectRepository } from '@nestjs/typeorm';",
      "import { Repository } from 'typeorm';",
      "",
      "@Injectable()",
      "export class ServiceName {",
      "\tconstructor(",
      "\t\t@InjectRepository(Entity)",
      "\t\tprivate readonly repository: Repository<Entity>,",
      "\t) {}",
      "}"
    ]
  },
  "c-service": {
    "prefix": "c-service",
    "body": [
      "@Inject(config.KEY)",
      "private readonly configService: ConfigType<typeof config>,"
    ]
  },
  "norm": {
    "prefix": "norm",
    "body": [
      "const entityQB = new Norm<$0>({",
      "\talias: 'Alias',",
      "\trepository: this.repository,",
      "\tattributes: []",
      "});"
    ]
  },
  "p-id": {
    "prefix": "p-id",
    "body": "@Param('id', ParseIntPipe) id: number"
  },
  "http-code": {
    "prefix": "http-code",
    "body": "@HttpCode(HttpStatus.$0)"
  }
}
